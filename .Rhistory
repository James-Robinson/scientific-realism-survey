now()
runApp()
runApp()
runApp()
runApp()
as.integer("42")
runApp()
runApp()
dfResults
runApp()
runApp()
assignCluster <- function(dfRow) {
# Define the centroids data frame
centroids <- data.frame(
Cluster = c(1, 2, 3, 4, 5),
S1 = c(61, 101, 79, 78, 65),
S2 = c(30.3, 84.6, 82.3, 58.6, 69.7),
S3 = c(54.5, 92.8, 89.6, 79, 79.3),
S4 = c(67.5, 18.9, 29.6, 32.8, 66.1),
S5 = c(54.6, 92.6, 89.5, 77, 39.6),
S6 = c(66.1, 9.2, 24.1, 26.8, 78),
S7 = c(43.2, 86, 85.5, 66.1, 80.3),
S8 = c(64.5, 24, 55.2, 40.7, 37.9),
S9 = c(46.8, 88.7, 88.2, 63.6, 29.7),
S10 = c(71.2, 18, 46.7, 35.9, 65.5),
S11 = c(25.2, 65.9, 61.4, 36.9, 71.6),
S12 = c(57.3, 92.8, 86.6, 68.1, 51.4),
S13 = c(55.7, 96.4, 95, 86, 83.2),
S14 = c(43.3, 95.3, 89.4, 76, 65.5),
S15 = c(43.8, 87, 89.5, 72, 74),
S16 = c(61, 22.2, 43.8, 45.6, 61.6),
S17 = c(76.7, 92, 92.4, 81.9, 88.9),
S18 = c(48.9, 94.4, 93.2, 76.5, 77.5),
S19 = c(42.7, 82.8, 84.8, 73, 73.1),
S20 = c(48.3, 81, 76.2, 64.4, 68),
S21 = c(37.6, 83.6, 87.2, 59.2, 74.1),
S22 = c(61, 90.5, 93.4, 82.4, 74.7),
S23 = c(62.7, 17.8, 25.2, 32.7, 64.8),
S24 = c(34.2, 71.3, 79.3, 47.3, 73.1),
S25 = c(54.2, 22.2, 60.6, 34.7, 57.2),
# S26 = c(45.5, 64.5, 53.6, 53.9, 52.8), ignore LHC question
S27 = c(58.8, 39.4, 61.9, 58.8, 55.3),
S28 = c(83.1, 74.8, 79.7, 79.7, 81.6),
S29 = c(66.5, 41.5, 56.4, 50.4, 73.6),
S30 = c(81.6, 46.8, 77.5, 56, 81.4)
)
colnames(centroids) <- c("Cluster", paste0("S", c(1:25, 27:30)))
determine_cluster <- function(df, centroids) {
# Initialize a vector to store the cluster assignments
# Calculate the Euclidean distance between the row and each cluster centroid
distances <- apply(centroids[ , -1], 1, function(centroid) {
sqrt(sum((as.integer(df[1, colnames(df) %in% colnames(centroids)]) - centroid)^2, na.rm = TRUE))
})
# Assign the cluster with the minimum distance
print(distances)
return(centroids$Cluster[which.min(distances)])
}
return(determine_cluster(dfRow, centroids))
}
print(determine_cluster(test_df, centroids))
print(assignCluster(test_df, centroids))
print(assignCluster(test_df))
# Define the test dataframe with columns S1 to S30 and a single row of sample data
test_df <- data.frame(
S1 = 50, S2 = 60, S3 = 70, S4 = 80, S5 = 90,
S6 = 40, S7 = 55, S8 = 65, S9 = 75, S10 = 85,
S11 = 35, S12 = 45, S13 = 55, S14 = 65, S15 = 75,
S16 = 85, S17 = 95, S18 = 50, S19 = 60, S20 = 70,
S21 = 80, S22 = 90, S23 = 40, S24 = 50, S25 = 60,
S26 = 70, S27 = 80, S28 = 90, S29 = 50, S30 = 60
)
assignCluster <- function(dfRow) {
# Define the centroids data frame
centroids <- data.frame(
Cluster = c(1, 2, 3, 4, 5),
S1 = c(61, 101, 79, 78, 65),
S2 = c(30.3, 84.6, 82.3, 58.6, 69.7),
S3 = c(54.5, 92.8, 89.6, 79, 79.3),
S4 = c(67.5, 18.9, 29.6, 32.8, 66.1),
S5 = c(54.6, 92.6, 89.5, 77, 39.6),
S6 = c(66.1, 9.2, 24.1, 26.8, 78),
S7 = c(43.2, 86, 85.5, 66.1, 80.3),
S8 = c(64.5, 24, 55.2, 40.7, 37.9),
S9 = c(46.8, 88.7, 88.2, 63.6, 29.7),
S10 = c(71.2, 18, 46.7, 35.9, 65.5),
S11 = c(25.2, 65.9, 61.4, 36.9, 71.6),
S12 = c(57.3, 92.8, 86.6, 68.1, 51.4),
S13 = c(55.7, 96.4, 95, 86, 83.2),
S14 = c(43.3, 95.3, 89.4, 76, 65.5),
S15 = c(43.8, 87, 89.5, 72, 74),
S16 = c(61, 22.2, 43.8, 45.6, 61.6),
S17 = c(76.7, 92, 92.4, 81.9, 88.9),
S18 = c(48.9, 94.4, 93.2, 76.5, 77.5),
S19 = c(42.7, 82.8, 84.8, 73, 73.1),
S20 = c(48.3, 81, 76.2, 64.4, 68),
S21 = c(37.6, 83.6, 87.2, 59.2, 74.1),
S22 = c(61, 90.5, 93.4, 82.4, 74.7),
S23 = c(62.7, 17.8, 25.2, 32.7, 64.8),
S24 = c(34.2, 71.3, 79.3, 47.3, 73.1),
S25 = c(54.2, 22.2, 60.6, 34.7, 57.2),
# S26 = c(45.5, 64.5, 53.6, 53.9, 52.8), ignore LHC question
S27 = c(58.8, 39.4, 61.9, 58.8, 55.3),
S28 = c(83.1, 74.8, 79.7, 79.7, 81.6),
S29 = c(66.5, 41.5, 56.4, 50.4, 73.6),
S30 = c(81.6, 46.8, 77.5, 56, 81.4)
)
colnames(centroids) <- c("Cluster", paste0("S", c(1:25, 27:30)))
determine_cluster <- function(df, centroids) {
# Initialize a vector to store the cluster assignments
# Calculate the Euclidean distance between the row and each cluster centroid
distances <- apply(centroids[ , -1], 1, function(centroid) {
sqrt(sum((as.integer(df[1, colnames(df) %in% colnames(centroids)]) - centroid)^2, na.rm = TRUE))
})
# Assign the cluster with the minimum distance
print(distances)
return(centroids$Cluster[which.min(distances)])
}
return(determine_cluster(dfRow, centroids))
}
assignCluster <- function(dfRow) {
# Define the centroids data frame
centroids <- data.frame(
Cluster = c(1, 2, 3, 4, 5),
S1 = c(61, 101, 79, 78, 65),
S2 = c(30.3, 84.6, 82.3, 58.6, 69.7),
S3 = c(54.5, 92.8, 89.6, 79, 79.3),
S4 = c(67.5, 18.9, 29.6, 32.8, 66.1),
S5 = c(54.6, 92.6, 89.5, 77, 39.6),
S6 = c(66.1, 9.2, 24.1, 26.8, 78),
S7 = c(43.2, 86, 85.5, 66.1, 80.3),
S8 = c(64.5, 24, 55.2, 40.7, 37.9),
S9 = c(46.8, 88.7, 88.2, 63.6, 29.7),
S10 = c(71.2, 18, 46.7, 35.9, 65.5),
S11 = c(25.2, 65.9, 61.4, 36.9, 71.6),
S12 = c(57.3, 92.8, 86.6, 68.1, 51.4),
S13 = c(55.7, 96.4, 95, 86, 83.2),
S14 = c(43.3, 95.3, 89.4, 76, 65.5),
S15 = c(43.8, 87, 89.5, 72, 74),
S16 = c(61, 22.2, 43.8, 45.6, 61.6),
S17 = c(76.7, 92, 92.4, 81.9, 88.9),
S18 = c(48.9, 94.4, 93.2, 76.5, 77.5),
S19 = c(42.7, 82.8, 84.8, 73, 73.1),
S20 = c(48.3, 81, 76.2, 64.4, 68),
S21 = c(37.6, 83.6, 87.2, 59.2, 74.1),
S22 = c(61, 90.5, 93.4, 82.4, 74.7),
S23 = c(62.7, 17.8, 25.2, 32.7, 64.8),
S24 = c(34.2, 71.3, 79.3, 47.3, 73.1),
S25 = c(54.2, 22.2, 60.6, 34.7, 57.2),
# S26 = c(45.5, 64.5, 53.6, 53.9, 52.8), ignore LHC question
S27 = c(58.8, 39.4, 61.9, 58.8, 55.3),
S28 = c(83.1, 74.8, 79.7, 79.7, 81.6),
S29 = c(66.5, 41.5, 56.4, 50.4, 73.6),
S30 = c(81.6, 46.8, 77.5, 56, 81.4)
)
colnames(centroids) <- c("Cluster", paste0("S", c(1:25, 27:30)))
determine_cluster <- function(df, centroids) {
# Initialize a vector to store the cluster assignments
# Calculate the Euclidean distance between the row and each cluster centroid
distances <- apply(centroids[ , -1], 1, function(centroid) {
sqrt(sum((as.integer(df[1, colnames(df) %in% colnames(centroids)]) - centroid)^2, na.rm = TRUE))
})
# Assign the cluster with the minimum distance
print(distances)
return(centroids$Cluster[which.min(distances)])
}
return(determine_cluster(dfRow, centroids))
}
assignCluster <- function(dfRow) {
# Define the centroids data frame
centroids <- data.frame(
Cluster = c(1, 2, 3, 4, 5),
S1 = c(61, 101, 79, 78, 65),
S2 = c(30.3, 84.6, 82.3, 58.6, 69.7),
S3 = c(54.5, 92.8, 89.6, 79, 79.3),
S4 = c(67.5, 18.9, 29.6, 32.8, 66.1),
S5 = c(54.6, 92.6, 89.5, 77, 39.6),
S6 = c(66.1, 9.2, 24.1, 26.8, 78),
S7 = c(43.2, 86, 85.5, 66.1, 80.3),
S8 = c(64.5, 24, 55.2, 40.7, 37.9),
S9 = c(46.8, 88.7, 88.2, 63.6, 29.7),
S10 = c(71.2, 18, 46.7, 35.9, 65.5),
S11 = c(25.2, 65.9, 61.4, 36.9, 71.6),
S12 = c(57.3, 92.8, 86.6, 68.1, 51.4),
S13 = c(55.7, 96.4, 95, 86, 83.2),
S14 = c(43.3, 95.3, 89.4, 76, 65.5),
S15 = c(43.8, 87, 89.5, 72, 74),
S16 = c(61, 22.2, 43.8, 45.6, 61.6),
S17 = c(76.7, 92, 92.4, 81.9, 88.9),
S18 = c(48.9, 94.4, 93.2, 76.5, 77.5),
S19 = c(42.7, 82.8, 84.8, 73, 73.1),
S20 = c(48.3, 81, 76.2, 64.4, 68),
S21 = c(37.6, 83.6, 87.2, 59.2, 74.1),
S22 = c(61, 90.5, 93.4, 82.4, 74.7),
S23 = c(62.7, 17.8, 25.2, 32.7, 64.8),
S24 = c(34.2, 71.3, 79.3, 47.3, 73.1),
S25 = c(54.2, 22.2, 60.6, 34.7, 57.2),
# S26 = c(45.5, 64.5, 53.6, 53.9, 52.8), ignore LHC question
S27 = c(58.8, 39.4, 61.9, 58.8, 55.3),
S28 = c(83.1, 74.8, 79.7, 79.7, 81.6),
S29 = c(66.5, 41.5, 56.4, 50.4, 73.6),
S30 = c(81.6, 46.8, 77.5, 56, 81.4)
)
colnames(centroids) <- c("Cluster", paste0("S", c(1:25, 27:30)))
determine_cluster <- function(df, centroids) {
# Initialize a vector to store the cluster assignments
# Calculate the Euclidean distance between the row and each cluster centroid
distances <- apply(centroids[ , -1], 1, function(centroid) {
sqrt(sum((as.integer(df[1, colnames(df) %in% colnames(centroids)]) - centroid)^2, na.rm = TRUE))
})
# Assign the cluster with the minimum distance
print(distances)
return(centroids$Cluster[which.min(distances)])
}
return(determine_cluster(dfRow, centroids))
}
assignCluster <- function(dfRow) {
# Define the centroids data frame
centroids <- data.frame(
Cluster = c(1, 2, 3, 4, 5),
S1 = c(61, 101, 79, 78, 65),
S2 = c(30.3, 84.6, 82.3, 58.6, 69.7),
S3 = c(54.5, 92.8, 89.6, 79, 79.3),
S4 = c(67.5, 18.9, 29.6, 32.8, 66.1),
S5 = c(54.6, 92.6, 89.5, 77, 39.6),
S6 = c(66.1, 9.2, 24.1, 26.8, 78),
S7 = c(43.2, 86, 85.5, 66.1, 80.3),
S8 = c(64.5, 24, 55.2, 40.7, 37.9),
S9 = c(46.8, 88.7, 88.2, 63.6, 29.7),
S10 = c(71.2, 18, 46.7, 35.9, 65.5),
S11 = c(25.2, 65.9, 61.4, 36.9, 71.6),
S12 = c(57.3, 92.8, 86.6, 68.1, 51.4),
S13 = c(55.7, 96.4, 95, 86, 83.2),
S14 = c(43.3, 95.3, 89.4, 76, 65.5),
S15 = c(43.8, 87, 89.5, 72, 74),
S16 = c(61, 22.2, 43.8, 45.6, 61.6),
S17 = c(76.7, 92, 92.4, 81.9, 88.9),
S18 = c(48.9, 94.4, 93.2, 76.5, 77.5),
S19 = c(42.7, 82.8, 84.8, 73, 73.1),
S20 = c(48.3, 81, 76.2, 64.4, 68),
S21 = c(37.6, 83.6, 87.2, 59.2, 74.1),
S22 = c(61, 90.5, 93.4, 82.4, 74.7),
S23 = c(62.7, 17.8, 25.2, 32.7, 64.8),
S24 = c(34.2, 71.3, 79.3, 47.3, 73.1),
S25 = c(54.2, 22.2, 60.6, 34.7, 57.2),
# S26 = c(45.5, 64.5, 53.6, 53.9, 52.8), ignore LHC question
S27 = c(58.8, 39.4, 61.9, 58.8, 55.3),
S28 = c(83.1, 74.8, 79.7, 79.7, 81.6),
S29 = c(66.5, 41.5, 56.4, 50.4, 73.6),
S30 = c(81.6, 46.8, 77.5, 56, 81.4)
)
colnames(centroids) <- c("Cluster", paste0("S", c(1:25, 27:30)))
determine_cluster <- function(df, centroids) {
# Initialize a vector to store the cluster assignments
# Calculate the Euclidean distance between the row and each cluster centroid
distances <- apply(centroids[ , -1], 1, function(centroid) {
sqrt(sum((as.integer(df[1, colnames(df) %in% colnames(centroids)]) - centroid)^2, na.rm = TRUE))
})
# Assign the cluster with the minimum distance
print(distances)
return(centroids$Cluster[which.min(distances)])
}
return(determine_cluster(dfRow, centroids))
}
# Define the test dataframe with columns S1 to S30 and a single row of sample data
test_df <- data.frame(
S1 = 50, S2 = 60, S3 = 70, S4 = 80, S5 = 90,
S6 = 40, S7 = 55, S8 = 65, S9 = 75, S10 = 85,
S11 = 35, S12 = 45, S13 = 55, S14 = 65, S15 = 75,
S16 = 85, S17 = 95, S18 = 50, S19 = 60, S20 = 70,
S21 = 80, S22 = 90, S23 = 40, S24 = 50, S25 = 60,
S26 = 70, S27 = 80, S28 = 90, S29 = 50, S30 = 60
)
# Print the test dataframe
print(test_df)
print(assignCluster(test_df))
# Define the test dataframe with columns S1 to S30 and a single row of sample data
# Define the test dataframe with columns S1 to S30 and the specified values
test_df <- data.frame(
S1 = 84.6, S2 = 92.8, S3 = 18.9, S4 = 92.6, S5 = 9.2,
S6 = 86, S7 = 24, S8 = 88.7, S9 = 18, S10 = 65.9,
S11 = 92.8, S12 = 38.4, S13 = 96.4, S14 = 95.3, S15 = 87,
S16 = 22.2, S17 = 92, S18 = 94.4, S19 = 82.8, S20 = 81,
S21 = 83.6, S22 = 90.5, S23 = 17.8, S24 = 71.3, S25 = 22.2,
S26 = 64.5,  # This will be ignored in the cluster assignment
S27 = 39.4, S28 = 74.8, S29 = 41.5, S30 = 46.8
)
# Print the test dataframe
print(test_df)
# Print the test dataframe
print(test_df)
print(assignCluster(test_df))
# Define the centroids data frame
centroids <- data.frame(
Cluster = c(1, 2, 3, 4, 5),
S1  = c(30.3, 84.6, 82.3, 58.6, 69.7),
S2  = c(54.5, 92.8, 89.6, 79, 79.3),
S3  = c(67.5, 18.9, 29.6, 32.8, 66.1),
S4  = c(54.6, 92.6, 89.5, 77, 39.6),
S5  = c(66.1, 9.2, 24.1, 26.8, 78),
S6  = c(43.2, 86, 85.5, 66.1, 80.3),
S7  = c(64.5, 24, 55.2, 40.7, 37.9),
S8  = c(46.8, 88.7, 88.2, 63.6, 29.7),
S9  = c(71.2, 18, 46.7, 35.9, 65.5),
S10 = c(25.2, 65.9, 61.4, 36.9, 71.6),
S11 = c(57.3, 92.8, 86.6, 68.1, 51.4),
S12 = c(66.9, 38.4, 52.2, 49.8, 58),
S13 = c(55.7, 96.4, 95, 86, 83.2),
S14 = c(43.3, 95.3, 89.4, 76, 65.5),
S15 = c(43.8, 87, 89.5, 72, 74),
S16 = c(61, 22.2, 43.8, 45.6, 61.6),
S17 = c(76.7, 92, 92.4, 81.9, 88.9),
S18 = c(48.9, 94.4, 93.2, 76.5, 77.5),
S19 = c(42.7, 82.8, 84.8, 73, 73.1),
S20 = c(48.3, 81, 76.2, 64.4, 68),
S21 = c(37.6, 83.6, 87.2, 59.2, 74.1),
S22 = c(61, 90.5, 93.4, 82.4, 74.7),
S23 = c(62.7, 17.8, 25.2, 32.7, 64.8),
S24 = c(34.2, 71.3, 79.3, 47.3, 73.1),
S25 = c(54.2, 22.2, 60.6, 34.7, 57.2),
S26 = c(45.5, 64.5, 53.6, 53.9, 52.8),
S27 = c(58.8, 39.4, 61.9, 58.8, 55.3),
S28 = c(83.1, 74.8, 79.7, 79.7, 81.6),
S29 = c(66.5, 41.5, 56.4, 50.4, 73.6),
S30 = c(81.6, 46.8, 77.5, 56, 81.4)
)
colnames(centroids) <- c("Cluster", paste0("S", c(1:25, 27:30)))
determine_cluster <- function(df, centroids) {
# Initialize a vector to store the cluster assignments
# Calculate the Euclidean distance between the row and each cluster centroid
distances <- apply(centroids[ , -1], 1, function(centroid) {
sqrt(sum((as.integer(df[1, colnames(df) %in% colnames(centroids)]) - centroid)^2, na.rm = TRUE))
})
# Assign the cluster with the minimum distance
print(distances)
return(centroids$Cluster[which.min(distances)])
}
return(determine_cluster(dfRow, centroids))
assignCluster <- function(dfRow) {
# Define the centroids data frame
centroids <- data.frame(
Cluster = c(1, 2, 3, 4, 5),
S1  = c(30.3, 84.6, 82.3, 58.6, 69.7),
S2  = c(54.5, 92.8, 89.6, 79, 79.3),
S3  = c(67.5, 18.9, 29.6, 32.8, 66.1),
S4  = c(54.6, 92.6, 89.5, 77, 39.6),
S5  = c(66.1, 9.2, 24.1, 26.8, 78),
S6  = c(43.2, 86, 85.5, 66.1, 80.3),
S7  = c(64.5, 24, 55.2, 40.7, 37.9),
S8  = c(46.8, 88.7, 88.2, 63.6, 29.7),
S9  = c(71.2, 18, 46.7, 35.9, 65.5),
S10 = c(25.2, 65.9, 61.4, 36.9, 71.6),
S11 = c(57.3, 92.8, 86.6, 68.1, 51.4),
S12 = c(66.9, 38.4, 52.2, 49.8, 58),
S13 = c(55.7, 96.4, 95, 86, 83.2),
S14 = c(43.3, 95.3, 89.4, 76, 65.5),
S15 = c(43.8, 87, 89.5, 72, 74),
S16 = c(61, 22.2, 43.8, 45.6, 61.6),
S17 = c(76.7, 92, 92.4, 81.9, 88.9),
S18 = c(48.9, 94.4, 93.2, 76.5, 77.5),
S19 = c(42.7, 82.8, 84.8, 73, 73.1),
S20 = c(48.3, 81, 76.2, 64.4, 68),
S21 = c(37.6, 83.6, 87.2, 59.2, 74.1),
S22 = c(61, 90.5, 93.4, 82.4, 74.7),
S23 = c(62.7, 17.8, 25.2, 32.7, 64.8),
S24 = c(34.2, 71.3, 79.3, 47.3, 73.1),
S25 = c(54.2, 22.2, 60.6, 34.7, 57.2),
S26 = c(45.5, 64.5, 53.6, 53.9, 52.8),
S27 = c(58.8, 39.4, 61.9, 58.8, 55.3),
S28 = c(83.1, 74.8, 79.7, 79.7, 81.6),
S29 = c(66.5, 41.5, 56.4, 50.4, 73.6),
S30 = c(81.6, 46.8, 77.5, 56, 81.4)
)
colnames(centroids) <- c("Cluster", paste0("S", c(1:25, 27:30)))
determine_cluster <- function(df, centroids) {
# Initialize a vector to store the cluster assignments
# Calculate the Euclidean distance between the row and each cluster centroid
distances <- apply(centroids[ , -1], 1, function(centroid) {
sqrt(sum((as.integer(df[1, colnames(df) %in% colnames(centroids)]) - centroid)^2, na.rm = TRUE))
})
# Assign the cluster with the minimum distance
print(distances)
return(centroids$Cluster[which.min(distances)])
}
return(determine_cluster(dfRow, centroids))
}
assignCluster <- function(dfRow) {
# Define the centroids data frame
centroids <- data.frame(
Cluster = c(1, 2, 3, 4, 5),
S1  = c(30.3, 84.6, 82.3, 58.6, 69.7),
S2  = c(54.5, 92.8, 89.6, 79, 79.3),
S3  = c(67.5, 18.9, 29.6, 32.8, 66.1),
S4  = c(54.6, 92.6, 89.5, 77, 39.6),
S5  = c(66.1, 9.2, 24.1, 26.8, 78),
S6  = c(43.2, 86, 85.5, 66.1, 80.3),
S7  = c(64.5, 24, 55.2, 40.7, 37.9),
S8  = c(46.8, 88.7, 88.2, 63.6, 29.7),
S9  = c(71.2, 18, 46.7, 35.9, 65.5),
S10 = c(25.2, 65.9, 61.4, 36.9, 71.6),
S11 = c(57.3, 92.8, 86.6, 68.1, 51.4),
S12 = c(66.9, 38.4, 52.2, 49.8, 58),
S13 = c(55.7, 96.4, 95, 86, 83.2),
S14 = c(43.3, 95.3, 89.4, 76, 65.5),
S15 = c(43.8, 87, 89.5, 72, 74),
S16 = c(61, 22.2, 43.8, 45.6, 61.6),
S17 = c(76.7, 92, 92.4, 81.9, 88.9),
S18 = c(48.9, 94.4, 93.2, 76.5, 77.5),
S19 = c(42.7, 82.8, 84.8, 73, 73.1),
S20 = c(48.3, 81, 76.2, 64.4, 68),
S21 = c(37.6, 83.6, 87.2, 59.2, 74.1),
S22 = c(61, 90.5, 93.4, 82.4, 74.7),
S23 = c(62.7, 17.8, 25.2, 32.7, 64.8),
S24 = c(34.2, 71.3, 79.3, 47.3, 73.1),
S25 = c(54.2, 22.2, 60.6, 34.7, 57.2),
S26 = c(45.5, 64.5, 53.6, 53.9, 52.8),
S27 = c(58.8, 39.4, 61.9, 58.8, 55.3),
S28 = c(83.1, 74.8, 79.7, 79.7, 81.6),
S29 = c(66.5, 41.5, 56.4, 50.4, 73.6),
S30 = c(81.6, 46.8, 77.5, 56, 81.4)
)
colnames(centroids) <- c("Cluster", paste0("S", c(1:25, 27:30)))
determine_cluster <- function(df, centroids) {
# Initialize a vector to store the cluster assignments
# Calculate the Euclidean distance between the row and each cluster centroid
distances <- apply(centroids[ , -1], 1, function(centroid) {
sqrt(sum((as.integer(df[1, colnames(df) %in% colnames(centroids)]) - centroid)^2, na.rm = TRUE))
})
# Assign the cluster with the minimum distance
print(distances)
return(centroids$Cluster[which.min(distances)])
}
return(determine_cluster(dfRow, centroids))
}
assignCluster <- function(dfRow) {
# Define the centroids data frame
centroids <- data.frame(
Cluster = c(1, 2, 3, 4, 5),
S1  = c(30.3, 84.6, 82.3, 58.6, 69.7),
S2  = c(54.5, 92.8, 89.6, 79, 79.3),
S3  = c(67.5, 18.9, 29.6, 32.8, 66.1),
S4  = c(54.6, 92.6, 89.5, 77, 39.6),
S5  = c(66.1, 9.2, 24.1, 26.8, 78),
S6  = c(43.2, 86, 85.5, 66.1, 80.3),
S7  = c(64.5, 24, 55.2, 40.7, 37.9),
S8  = c(46.8, 88.7, 88.2, 63.6, 29.7),
S9  = c(71.2, 18, 46.7, 35.9, 65.5),
S10 = c(25.2, 65.9, 61.4, 36.9, 71.6),
S11 = c(57.3, 92.8, 86.6, 68.1, 51.4),
S12 = c(66.9, 38.4, 52.2, 49.8, 58),
S13 = c(55.7, 96.4, 95, 86, 83.2),
S14 = c(43.3, 95.3, 89.4, 76, 65.5),
S15 = c(43.8, 87, 89.5, 72, 74),
S16 = c(61, 22.2, 43.8, 45.6, 61.6),
S17 = c(76.7, 92, 92.4, 81.9, 88.9),
S18 = c(48.9, 94.4, 93.2, 76.5, 77.5),
S19 = c(42.7, 82.8, 84.8, 73, 73.1),
S20 = c(48.3, 81, 76.2, 64.4, 68),
S21 = c(37.6, 83.6, 87.2, 59.2, 74.1),
S22 = c(61, 90.5, 93.4, 82.4, 74.7),
S23 = c(62.7, 17.8, 25.2, 32.7, 64.8),
S24 = c(34.2, 71.3, 79.3, 47.3, 73.1),
S25 = c(54.2, 22.2, 60.6, 34.7, 57.2),
S26 = c(45.5, 64.5, 53.6, 53.9, 52.8),
S27 = c(58.8, 39.4, 61.9, 58.8, 55.3),
S28 = c(83.1, 74.8, 79.7, 79.7, 81.6),
S29 = c(66.5, 41.5, 56.4, 50.4, 73.6),
S30 = c(81.6, 46.8, 77.5, 56, 81.4)
)
colnames(centroids) <- c("Cluster", paste0("S", c(1:25, 27:30)))
determine_cluster <- function(df, centroids) {
# Initialize a vector to store the cluster assignments
# Calculate the Euclidean distance between the row and each cluster centroid
distances <- apply(centroids[ , -1], 1, function(centroid) {
sqrt(sum((as.integer(df[1, colnames(df) %in% colnames(centroids)]) - centroid)^2, na.rm = TRUE))
})
# Assign the cluster with the minimum distance
print(distances)
return(centroids$Cluster[which.min(distances)])
}
return(determine_cluster(dfRow, centroids))
}
# Define the test dataframe with columns S1 to S30 and a single row of sample data
# Define the test dataframe with columns S1 to S30 and the specified values
test_df <- data.frame(
S1 = 84.6, S2 = 92.8, S3 = 18.9, S4 = 92.6, S5 = 9.2,
S6 = 86, S7 = 24, S8 = 88.7, S9 = 18, S10 = 65.9,
S11 = 92.8, S12 = 38.4, S13 = 96.4, S14 = 95.3, S15 = 87,
S16 = 22.2, S17 = 92, S18 = 94.4, S19 = 82.8, S20 = 81,
S21 = 83.6, S22 = 90.5, S23 = 17.8, S24 = 71.3, S25 = 22.2,
S26 = 64.5,  # This will be ignored in the cluster assignment
S27 = 39.4, S28 = 74.8, S29 = 41.5, S30 = 46.8
)
# Print the test dataframe
print(test_df)
# Print the test dataframe
print(test_df)
print(assignCluster(test_df))
runApp()
shiny::runApp()
runApp()
??shinyApp
getwd()
runApp(appDir = getwd(), 4306)
runApp("App.R", 4306)
runApp("/app.R", 4306)
runApp("app.R", 4306)
runApp("0.0.0.0", 4306)
runApp()
gc()
gc()
gc()
runApp()
